version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
      - "8001:8001"  # Orchestrator Agent
      - "8002:8002"  # Auth Agent
      - "8003:8003"  # Search Agent
      - "8004:8004"  # General Agent
      - "8006:8006"  # ESQL Query Agent
      - "8007:8007"  # Chatbot Agent
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_started
    networks:
      - hackathon-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - hackathon-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hackathon-network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  hackathon-network:
    driver: bridge

volumes:
  redis-data: